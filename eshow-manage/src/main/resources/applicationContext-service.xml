<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">
	
	<!-- =================================================================== -->
    <!-- AOP: Configuration and Aspects                                      -->
    <!-- =================================================================== -->
    <aop:config>
        <aop:advisor id="userManagerTx" advice-ref="userManagerTxAdvice" pointcut="execution(* *..service.UserManager.*(..))" order="0"/>        
        <aop:advisor id="userManagerSecurity" advice-ref="userSecurityAdvice" pointcut="execution(* *..service.UserManager.saveUser(..))" order="1"/>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service.*Manager.*(..))" order="2"/>
    </aop:config>
    
    <!-- Enable @Transactional support -->
    <tx:annotation-driven/>
    
    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>
    
    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
    
    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="cn.org.eshow.service"/>

	<tx:advice id="txAdvice">
        <tx:attributes>
            <!-- Read-only commented out to make things easier for end-users -->
            <!-- http://issues.appfuse.org/browse/APF-556 -->
            <!--tx:method name="get*" read-only="true"/-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

	<tx:advice id="userManagerTxAdvice">
        <tx:attributes>
            <tx:method name="save*" rollback-for="UserExistsException"/>
        </tx:attributes>
    </tx:advice>

	<bean id="userSecurityAdvice" class="cn.org.eshow.service.UserSecurityAdvice" />

	<!-- =================================================================== -->
	<!-- Mail: Sender and Velocity configuration                             -->
	<!-- =================================================================== -->
	<bean id="mailEngine" class="cn.org.eshow.service.MailEngine">
		<property name="mailSender" ref="mailSender" />
		<property name="from" value="${mail.default.from}" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- Uncomment if you need to authenticate with your SMTP Server -->
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="port" value="${mail.port}" />
		<property name="javaMailProperties">
            <value>
            	mail.smtp.timeout=25000
                mail.smtp.auth=true
                mail.smtp.starttls.enable=true
            </value>
        </property>
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" scope="prototype">
		<property name="from" value="${mail.default.from}" />
	</bean>
	
	<!-- 发送邮件线程 -->
	<bean id="sendEmailListener" class="cn.org.eshow.webapp.listener.SendEmailListener" lazy-init="false">
		<property name="mailEngine" ref="mailEngine" />
	</bean>

	<!-- =================================================================== -->
    <!-- Security class from Spring Security - used to configure Password    -->
    <!-- Encryption in UserManagerImpl. Can override in security.xml.        -->
    <!-- =================================================================== -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Password reset token encoder -->
    <bean id="passwordTokenEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
    
</beans>
